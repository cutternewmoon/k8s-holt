---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: &name authentik-secret
  namespace: security
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: *name
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        # Authentik
        AUTHENTIK_SECRET_KEY: "{{ .AUTHENTIK_SECRET_KEY }}"
        AUTHENTIK_REDIS__HOST: authentik-redis.security.svc.cluster.local
        AUTHENTIK_POSTGRESQL__USER: "{{ .AUTHENTIK_DATABASE_USER }}"
        AUTHENTIK_POSTGRESQL__PASSWORD: "{{ .AUTHENTIK_DATABASE_PASSWORD }}"
        AUTHENTIK_POSTGRESQL__HOST: postgres.database.svc.cluster.local
        AUTHENTIK_POSTGRESQL__NAME: &dbname authentik
        AUTHENTIK_EMAIL__USERNAME: "{{ .AUTHENTIK_EMAIL_USERNAME }}"
        AUTHENTIK_EMAIL__PASSWORD: "{{ .AUTHENTIK_EMAIL_PASSWORD }}"
        AUTHENTIK_BOOTSTRAP_EMAIL: "{{ .AUTHENTIK_BOOTSTRAP_EMAIL }}"
        AUTHENTIK_BOOTSTRAP_PASSWORD: "{{ .AUTHENTIK_BOOTSTRAP_PASSWORD }}"
        AUTHENTIK_BOOTSTRAP_TOKEN: "{{ .AUTHENTIK_BOOTSTRAP_TOKEN }}"
        # Postgres Init
        INIT_POSTGRES_DBNAME: *dbname
        INIT_POSTGRES_HOST: postgres.database.svc.cluster.local
        INIT_POSTGRES_USER: "{{ .AUTHENTIK_DATABASE_USER }}"
        INIT_POSTGRES_PASS: "{{ .AUTHENTIK_DATABASE_PASSWORD }}"
        INIT_POSTGRES_SUPER_PASS: "{{ .super_pass }}"
  dataFrom:
    - extract:
        key: authentik
    - extract:
        key: postgres
