---
# yaml-language-server: $schema=https://raw.githubusercontent.com/ishioni/CRDs-catalog/main/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: lidarr
  namespace: downloads
spec:
  chart:
    spec:
      chart: app-template
      version: 3.0.4
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  interval: 30m
  values:
    controllers:
      main:
        type: statefulset
        annotations:
          secret.reloader.stakater.com/reload: &secret lidarr-secret
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
              pullPolicy: IfNotPresent
            envFrom: &envFrom
              - secretRef:
                  name: lidarr-secret
        statefulset:
          volumeClaimTemplates:
            - name: config
              accessMode: ReadWriteOnce
              size: 50Gi
              storageClass: k8s-config
              globalMounts:
                - path: /config
        pod:
          securityContext:
            runAsNonRoot: true
            runAsUser: 1027
            runAsGroup: 1027
            fsGroup: 1027
            fsGroupChangePolicy: OnRootMismatch
            supplementalGroups:
              - 65536
        containers:
          main:
            volumeClaimTemplates:
              - name: config
                accessMode: ReadWriteOnce
                size: 50Gi
                storageClass: k8s-config
                globalMounts:
                  - path: /config
            image:
              repository: ghcr.io/onedr0p/lidarr-develop
              tag: 2.1.6.3993@sha256:36b75d721cca61d1a24c3882c253ae14952a6fad45c8e6dede23af79b61096f7
            env:
              TZ: "${CONFIG_TIMEZONE}"
              LIDARR__INSTANCE_NAME: ${APP}
              LIDARR__PORT: &port 80
              LIDARR__AUTHENTICATION_METHOD: Forms
              LIDARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
              LIDARR__APPLICATION_URL: "https://$HOSTNAME"
              LIDARR__THEME: dark
              COMPlus_EnableDiagnostics: "0"
            envFrom:
              - secretRef:
                  name: *secret
            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: {drop: ["ALL"]}
            resources:
              requests:
                cpu: 50m
                memory: 256M
              limits:
                memory: 1Gi
    service:
      main:
        ports:
          http:
            port: *port
    persistence:
      media:
        enabled: true
        existingClaim: glabdownloadsclaim
        globalMounts:
          - path: /media
            retain: true
      tmp:
        type: emptyDir
    ingress:
      main:
        enabled: true
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls: [hosts: [*host]]
